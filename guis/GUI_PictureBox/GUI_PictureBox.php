<?php
/**
 * Copyright (C) 2025 schmidseder.net
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

namespace filemigo\guis\GUI_PictureBox;

use pool\classes\Core\Input\Filter\DataType;
use pool\classes\Core\Input\Input;
use pool\classes\GUI\GUI_Module;

class GUI_PictureBox extends GUI_Module
{
    protected string $filePath = '';

    protected string $src = '';

    /**
     * Attributes for the script tag of the assoziated javascript file/class for this module.
     *
     * @var array|string[]
     */

    /**
     * @var int
     */
    protected int $superglobals = Input::POST;

    /**
     * @var array|string[]
     */
    protected array $templates = [
        'stdout' => 'tpl_PictureBox.html',
    ];

    protected array $inputFilter = [
//        'fileName'      => [ DataType::ALPHANUMERIC, ''],
//        'baseDirectory' => [ DataType::ALPHANUMERIC, ''],
        'frameHeight' => [DataType::INT],
        'index' => [DataType::INT],
    ];

    protected function provision(): void
    {
        $this->filePath = $this->getVar('filePath');
        $this->src = $this->getVar('src');
        parent::provision(); // TODO: Change the autogenerated stub
    }

    protected function prepare(): void
    {
        $this->Template->setVar('name', $this->getName());

        $this->setClientVar('notFound', /*!$this->isValidPath($this->filePath) ||*/ !file_exists($this->filePath));
        $this->setClientVar('src', $this->src);
        $this->setClientVar('frameHeight', $this->getVar('frameHeight'));
        $this->setClientVar('index', $this->getVar('index'));
    }

    protected function isValidPath(string $path): bool
    {
        $pathPattern = '/^[^\/]+(\/[^\/]+)*$/';
        return preg_match($pathPattern, $path) === 1;
    }

    /**
     *
     * @return string
     */
    public function getFilePath(): string
    {
        return $this->filePath;
    }

    public function getSrc(): string
    {
        return $this->src;
    }
}