<?php

namespace filemigo\guis\GUI_PictureBox;

use pool\classes\Core\Input\Filter\DataType;
use pool\classes\Core\Input\Input;
use pool\classes\GUI\GUI_Module;

class GUI_PictureBox extends GUI_Module
{
    protected string $filePath = '';

    protected string $src = '';

    /**
     * Attributes for the script tag of the assoziated javascript file/class for this module.
     *
     * @var array|string[]
     */

    /**
     * @var int
     */
    protected int $superglobals = Input::POST;

    /**
     * @var array|string[]
     */
    protected array $templates = [
        'stdout' => 'tpl_PictureBox.html',
    ];

    protected array $inputFilter = [
//        'fileName'      => [ DataType::ALPHANUMERIC, ''],
//        'baseDirectory' => [ DataType::ALPHANUMERIC, ''],
        'frameHeight'   => [ DataType::INT ],
        'index'         => [ DataType::INT ]
    ];

    protected function provision(): void
    {
        $this->filePath = $this->getVar('filePath');
        $this->src = $this->getVar('src');
        parent::provision(); // TODO: Change the autogenerated stub
    }

    protected function prepare(): void
    {
        parent::prepare(); // TODO: Change the autogenerated stub
        $this->Template->setVar('name', $this->getName());

        $this->setClientVar('notFound', /*!$this->isValidPath($this->filePath) ||*/ !file_exists($this->filePath)) ;
        $this->setClientVar('src', $this->src);
        $this->setClientVar('frameHeight', $this->getVar('frameHeight'));
        $this->setClientVar('index', $this->getVar('index'));
    }

    protected function isValidPath(string $path) : bool
    {
        $pathPattern = '/^[^\/]+(\/[^\/]+)*$/';
        return preg_match($pathPattern, $path) === 1;
    }

    /**
     *
     * @return string
     */
    public function getFilePath() : string
    {
        return $this->filePath;
    }

    public function getSrc() : string
    {
        return $this->src;
    }

    /*
    protected array $cssFiles = [
    ];



    protected function registerAjaxCalls(): void
    {

    }
    */
}